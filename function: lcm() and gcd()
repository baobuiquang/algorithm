//Function: lcm (least common multiple)
int lcm(int a, int b)
{
	int max = a * b;
	//Step = max(a,b)
	int step = a * (a > b) + b * (a <= b);
	for (int i = step; i <= max; i += step)
	{
		if ((i % a == 0) && (i % b == 0))
		{
			return i;
		}
	}
	return -1;
}

//Function: gcd (greatest common divisor)
//Euclidean algorithm
int gcd(int a, int b)
{
	while (a!=0 && b!=0)
	{
		if (a > b)
			a = a%b;
		else
			b = b%a;
	}
	return a + b;
}

//Function: lcm
//Euclidean algorithm: a * b = gcd * lcm
int lcm(int a, int b)
{
	return a * b / gcd(a, b);
}
